Index: .idea/hydra.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/hydra.xml	(date 1536283828414)
+++ .idea/hydra.xml	(date 1536283828414)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="HydraSettings">
+    <option name="hydraStorePath" value="D:\IdeaProjects\bigdata_scala\.hydra\idea" />
+    <option name="noOfCores" value="2" />
+    <option name="projectRoot" value="D:\IdeaProjects\bigdata_scala" />
+    <option name="sourcePartitioner" value="auto" />
+  </component>
+</project>
\ No newline at end of file
Index: src/HelloWorld.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/HelloWorld.scala	(date 1536369872407)
+++ src/HelloWorld.scala	(date 1536369872407)
@@ -0,0 +1,11 @@
+object HelloWorld {
+  def main(args: Array[String]): Unit = {
+    println("hello scala")
+  }
+
+//  val l1 = List(1,2,3)
+//  l1.aggregate(
+//
+//  )
+
+}
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1541424674766)
+++ .idea/vcs.xml	(date 1541424674766)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: src/cn/itcast/implicit_demo/ImplictDemo.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/implicit_demo/ImplictDemo.scala	(date 1536549862442)
+++ src/cn/itcast/implicit_demo/ImplictDemo.scala	(date 1536549862442)
@@ -0,0 +1,25 @@
+package cn.itcast.implicit_demo
+
+import java.io.File
+
+import scala.io.Source
+
+/**
+  * create by zyiming.
+  */
+class RichFile(val file:File){
+  def read = Source.fromFile(file.getPath()).mkString
+}
+
+object Context{
+  implicit def file2RichFile(f:File)= new RichFile(f)
+}
+
+object ImplictDemo {
+
+  def main(args: Array[String]) {
+    import Context.file2RichFile
+    println(new File("C:\\Users\\64955\\Desktop\\aaa.txt").read)
+  }
+
+}
\ No newline at end of file
Index: src/cn/itcast/implicit_demo/AnimalType.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/implicit_demo/AnimalType.scala	(date 1536550235991)
+++ src/cn/itcast/implicit_demo/AnimalType.scala	(date 1536550235991)
@@ -0,0 +1,29 @@
+package cn.itcast.implicit_demo
+
+/**
+  * 隐式转换调用类中本不存在的方法
+  * create by zyiming.
+  */
+
+class SwimingType{
+  def wantLearn(sw: String)  = println("小狗学会了: " + sw)
+}
+
+//定义隐式转换方法 注意,必须定义在object中
+object swimming {
+  implicit def learningType(s: AnimalType) = new SwimingType
+}
+
+//定义个普通的类 不具备任何方法
+class AnimalType
+
+object AnimalType {
+
+  def main(args: Array[String]): Unit = {
+    // import 导入隐式转换方法
+    import cn.itcast.implicit_demo.swimming._
+
+    val dog = new AnimalType //小狗不具备学习能力
+    dog.wantLearn("狗刨")
+  }
+}
\ No newline at end of file
Index: src/cn/itcast/extend/Person1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/extend/Person1.scala	(date 1536371556473)
+++ src/cn/itcast/extend/Person1.scala	(date 1536371556473)
@@ -0,0 +1,32 @@
+package cn.itcast.extend
+
+
+class Person1 {
+  var name : String = ""
+  var age : Int = 0
+  val score : String = ""
+  // 非抽象方法
+  def sayHello = println("hello")
+}
+
+class Student1 extends Person1 {
+
+  override def sayHello: Unit = println("hello_son")
+//  override var name : String = ""
+//  override var score : String = ""
+
+  val hobby = "ball"
+}
+
+object Student1 {
+  def main(args: Array[String]): Unit = {
+//    val s1 = new student1
+//    s1.sayHello
+    val s1: Person1 = new Student1
+    val s2: Person1 = null
+    println(s1.isInstanceOf[Student1])
+    //如果对象引用的为null,name类型判断一定返回false
+    println(s2.isInstanceOf[Student1])
+
+  }
+}
Index: src/cn/itcast/demo/Main_Demo1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/demo/Main_Demo1.scala	(date 1536541087255)
+++ src/cn/itcast/demo/Main_Demo1.scala	(date 1536541087255)
@@ -0,0 +1,26 @@
+package cn.itcast.demo
+
+/**
+  * create by zyiming.
+  */
+// 1.在中定定义main方法
+object Main_Demo1 {
+  def main(args: Array[String]): Unit = {
+    if (args.length > 0) {
+      println("hello, "+args(0))
+    } else {
+      println("hello world!")
+    }
+  }
+}
+
+// 2.使用继承App Trait,将需要写在main方法中运行的代码
+// 直接作为 object 的 constructor 代码即可.
+// 而且还可以使用args接收传入的参数
+object Main_Demo2 extends App {
+  if (args.length > 0) {
+    println("hello, "+args(0))
+  } else {
+    println("hello world!")
+  }
+}
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(date 1536283682428)
+++ .idea/encodings.xml	(date 1536283682428)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding" native2AsciiForPropertiesFiles="true" defaultCharsetForPropertiesFiles="UTF-8">
+    <file url="PROJECT" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: bigdata_scala.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- bigdata_scala.iml	(date 1536283687742)
+++ bigdata_scala.iml	(date 1536283687742)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="scala-sdk-2.11.8" level="application" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/junitgenerator-prj-settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/junitgenerator-prj-settings.xml	(date 1536313784423)
+++ .idea/junitgenerator-prj-settings.xml	(date 1536313784423)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="JUnitGeneratorProjectSettings">
+    <option name="selectedTemplateKey" value="JUnit 4" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(date 1536283687864)
+++ .idea/modules.xml	(date 1536283687864)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/bigdata_scala.iml" filepath="$PROJECT_DIR$/bigdata_scala.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(date 1536283687778)
+++ .idea/misc.xml	(date 1536283687778)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: src/cn/itcast/implicit_demo/SuperMan.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/implicit_demo/SuperMan.scala	(date 1536548884893)
+++ src/cn/itcast/implicit_demo/SuperMan.scala	(date 1536548884893)
@@ -0,0 +1,20 @@
+package cn.itcast.implicit_demo
+
+/**
+  * create by zyiming.
+  */
+class Man(val name: String)
+class SuperMan(val name: String) {
+  def heat=println("超人打怪兽")
+}
+
+object SuperMan {
+  //隐式转换方法
+  implicit def man2SuperMan(man: Man)=new SuperMan(man.name)
+
+  def main(args: Array[String]): Unit = {
+    val hero=new Man("hero")
+    //man具备了Superman的方法
+    hero.heat
+  }
+}
Index: src/cn/itcast/demo/Person.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/demo/Person.scala	(date 1536408938573)
+++ src/cn/itcast/demo/Person.scala	(date 1536408938573)
@@ -0,0 +1,37 @@
+package cn.itcast.demo
+
+/**
+  * create by: zyiming.
+  * description: 在Scala中,类并不用声明为public类型
+  * Scala源文件中可以包含多个类,所有这些类都具有共有可见性
+  * create time: 20:41 2018/9/7
+  */
+class Person {
+  //用val修饰的变量的可读性,有getter 但没有setter(相当于Java中用final修饰的变量)
+  val id="9722"
+
+  //用var修饰的变量既有getter, 又有setter
+  var age: Int = 18
+
+  //类私有字段,只能在类的内部使用或者伴生对象中访问
+  private var name : String = "唐伯虎"
+
+  //类私有字段,访问权限更加严格,该字段在当前类中被访问
+  //在伴生对象里面也不可以访问
+  private[this] var pet = "小强"
+}
+
+object Person {
+  def main(args: Array[String]): Unit = {
+    val p = new Person
+
+//    p.id="123"
+    println(p.id)
+    // 打印age
+    println(p.age)
+    // 伴生对象中可以访问private变量
+    println(p.name)
+    //由于pet字段用private[this]修饰,伴生对象中访问不到pet变量
+//    p.pet 访问不到
+  }
+}
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/uiDesigner.xml	(date 1536314457612)
+++ .idea/uiDesigner.xml	(date 1536314457612)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: src/cn/itcast/demo/Allen.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/demo/Allen.scala	(date 1536369111145)
+++ src/cn/itcast/demo/Allen.scala	(date 1536369111145)
@@ -0,0 +1,23 @@
+package cn.itcast.demo
+
+/**
+  * create by zyiming.
+  */
+class Allen(val name : String) {
+
+}
+
+object Allen {
+
+  //TODO apply方法的定义在类的伴生对象中
+  //TODO apply方法在某种程度上相当于构造器
+  def apply(name: String): Allen = new Allen(name)
+
+
+  def main(args: Array[String]): Unit = {
+    val allen = new Allen("12")
+
+    //当遇到 类名(参数一,参数二)
+    val allen1 = Allen("13")
+  }
+}
Index: src/cn/itcast/trait_demo/Logger.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/trait_demo/Logger.scala	(date 1536376359089)
+++ src/cn/itcast/trait_demo/Logger.scala	(date 1536376359089)
@@ -0,0 +1,13 @@
+package cn.itcast.trait_demo
+
+/**
+  * create by zyiming.
+  *
+  */
+trait Logger {
+  def log(message: String): Unit = println(message)
+}
+
+class PersonForLog(val name: String) extends Logger {
+
+}
Index: src/cn/itcast/cases/CaseDemo1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/cases/CaseDemo1.scala	(date 1536376693994)
+++ src/cn/itcast/cases/CaseDemo1.scala	(date 1536376693994)
@@ -0,0 +1,18 @@
+package cn.itcast.cases
+
+import scala.util.Random
+
+/**
+  * create by zyiming.
+  */
+object CaseDemo1 extends App {
+  val arr = Array("hadoop","zookeeper","spark")
+  val name = arr(Random.nextInt(arr.length))
+  name match {
+    case "hadoop" =>  println("大数据分布式存储和计算框架...")
+    case "zookeeper" =>  println("大数据分布式协调服务框架...")
+    case "spark" =>  println("大数据分布式内存计算框架...")
+    case _ => println("I don`t kown you")
+  }
+
+}
Index: src/cn/itcast/cases/CaseDemo2.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/cases/CaseDemo2.scala	(date 1536377378971)
+++ src/cn/itcast/cases/CaseDemo2.scala	(date 1536377378971)
@@ -0,0 +1,18 @@
+package cn.itcast.cases
+
+import scala.util.Random
+
+/**
+  * create by zyiming.
+  */
+object CaseDemo2 extends App {
+  val arr = Array("hello",1,2.0,CaseDemo1)
+  val v = arr(Random.nextInt(arr.length))
+  v match {
+    case x: Int => println("Int "+x)
+    case y: Double if(y >= 0) => println("Double "+y)
+    case z: String => println("string "+z)
+    case _ => throw new Exception("not match exception")
+  }
+
+}
Index: src/cn/itcast/trait_demo/HelloTrait.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/trait_demo/HelloTrait.scala	(date 1536374191760)
+++ src/cn/itcast/trait_demo/HelloTrait.scala	(date 1536374191760)
@@ -0,0 +1,26 @@
+package cn.itcast.trait_demo
+
+/**
+  * create by zyiming.
+  */
+trait HelloTrait {
+    def sayHello : Unit
+}
+
+trait ByeTrait {
+  def sayBye : Unit
+}
+
+//TODO 实现trait使用extends关键字
+class Allen1(val name: String) extends HelloTrait with ByeTrait  {
+  override def sayHello: Unit = println("hello "+name)
+
+  override def sayBye: Unit = println("bye " + name)
+}
+
+object Allen1 {
+  def main(args: Array[String]): Unit = {
+    val allen = new Allen1("dabao")
+    allen.sayHello
+  }
+}
Index: src/cn/itcast/actor/Actor1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/actor/Actor1.scala	(date 1536391602167)
+++ src/cn/itcast/actor/Actor1.scala	(date 1536391602167)
@@ -0,0 +1,32 @@
+package cn.itcast.actor
+
+import scala.actors.Actor
+
+/**
+  * create by zyiming.
+  */
+object Actor1 extends Actor{
+  println("构造函数执行了")
+  override def act(): Unit = {
+    for (i <- 0 to 10) {
+      println("Actor1:"+i)
+      Thread.sleep(2000)
+    }
+  }
+}
+object Actor2 extends Actor{
+  println("构造函数执行了")
+  override def act(): Unit = {
+    for (i <- 0 to 10) {
+      println("Actor2:"+i)
+      Thread.sleep(2000)
+    }
+  }
+}
+
+object ActorTest extends App {
+  //启动actor
+  Actor1.start()
+  Actor2.start()
+}
+
Index: src/cn/itcast/actor/MyActor.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/actor/MyActor.scala	(date 1536393763480)
+++ src/cn/itcast/actor/MyActor.scala	(date 1536393763480)
@@ -0,0 +1,33 @@
+package cn.itcast.actor
+
+import scala.actors.Actor
+
+/**
+  * create by zyiming.
+  */
+//TODO 实现actor不间断接收消息 本质就是让receive死循环
+class MyActor extends Actor{
+  override def act(): Unit = {
+    // receive用于每个actor内部进行消息的接收处理
+    // 通常使用模式匹配的方式针对消息进行处理
+    // 使用while实现循环获取消息
+    while (true) {
+      receive {
+        case "start" => println("starting....")
+        case "stop" => println("stop....")
+      }
+    }
+  }
+}
+
+object MyActor {
+  def main(args: Array[String]): Unit = {
+    val actor = new MyActor
+    actor.start()
+
+    // 发送消息 异步无返回值的消息
+    actor ! "start"
+    actor ! "stop"
+    println("消息发送完成")
+  }
+}
Index: src/cn/itcast/actor/YourActor.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/actor/YourActor.scala	(date 1536394037570)
+++ src/cn/itcast/actor/YourActor.scala	(date 1536394037570)
@@ -0,0 +1,33 @@
+package cn.itcast.actor
+
+import scala.actors.Actor
+
+/**
+  * create by zyiming.
+  * 使用react方法代替receive方法去接受消息
+  * 好处：react方式会复用线程，避免频繁的线程创建、销毁和切换。比receive更高效
+  * 注意:  react 如果要反复执行消息处理，react外层要用loop，不能用while
+  */
+class YourActor extends Actor{
+  override def act(): Unit = {
+    loop {
+      react {
+        case "start" => println("starting....")
+        case "stop" => println("stop....")
+      }
+    }
+  }
+}
+
+
+object YourActor {
+  def main(args: Array[String]): Unit = {
+    val actor = new YourActor
+    actor.start()
+
+    // 发送消息 异步无返回值的消息
+    actor ! "start"
+    actor ! "stop"
+    println("消息发送完成")
+  }
+}
\ No newline at end of file
Index: src/cn/itcast/actor/MsgActor.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/actor/MsgActor.scala	(date 1536395458138)
+++ src/cn/itcast/actor/MsgActor.scala	(date 1536395458138)
@@ -0,0 +1,58 @@
+package cn.itcast.actor
+
+import scala.actors.Actor
+
+/**
+  * create by zyiming.
+  */
+case class SyncMessage(id: Int,msg: String) //同步消息
+case class AsyncMessage(id: Int,msg: String) //异步消息
+case class ReplyMessage(id: Int,msg: String) //返回结果消息
+
+class MsgActor extends Actor{
+  override def act(): Unit = {
+    loop {
+      react {
+        case "start" => println("start....")
+
+        case SyncMessage(id,msg) => {
+          println(s"id:$id, SyncMessage:$msg")
+          Thread.sleep(2000)
+          sender ! ReplyMessage(1,"finish....")
+        }
+
+        case AsyncMessage(id,msg) => {
+          println(s"id:$id, AsyncMessage:$msg")
+          sender ! ReplyMessage(3,"finish....")
+          Thread.sleep(2000)
+        }
+
+      }
+    }
+  }
+}
+
+object MainActor {
+  def main(args: Array[String]): Unit = {
+    val mActor = new MsgActor
+    mActor.start()
+    mActor ! "start"
+
+    // 同步消息 有返回值
+    val r1 = mActor!?SyncMessage(1,"我是同步消息")
+    println("r1 "+r1)
+    println("===============================")
+
+    //异步无返回消息
+    val r2 = mActor!AsyncMessage(2,"我是异步无返回消息")
+    println("r2 "+r2)
+    println("===============================")
+
+    //异步有返回消息
+    val r3 = mActor!!AsyncMessage(3,"我是异步有返回消息")
+    //Future的apply()方法会构建一个异步操作且在未来某一个时刻返回一个值
+    val result = r3.apply()
+    println("result "+result)
+    println("===============================")
+  }
+}
Index: src/cn/itcast/cases/CaseDemo4.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/cases/CaseDemo4.scala	(date 1536379862481)
+++ src/cn/itcast/cases/CaseDemo4.scala	(date 1536379862481)
@@ -0,0 +1,36 @@
+package cn.itcast.cases
+
+import scala.util.Random
+
+/**
+  * 样例类
+  * create by zyiming.
+  * case class 类型，是多例的，后面要跟构造参数。
+  * case object 类型，是单例的。
+  */
+//todo 用case修饰的class object叫做样例类 专门用于模式匹配
+case class SubmitTask(id: String,name: String)
+case class HearBeat(time: Long)
+case object CheckTimeOutTask
+
+
+object CaseDemo4 extends App {
+  val arr = Array(CheckTimeOutTask,HearBeat(123123),SubmitTask("001","task-001"))
+  arr(Random.nextInt(arr.length)) match {
+    case SubmitTask(id, name) => {
+      println(s"$id, $name")
+    }
+
+    case HearBeat(time) => {
+      println(time)
+    }
+
+    case CheckTimeOutTask => {
+      println("check")
+    }
+  }
+
+
+
+
+}
Index: src/cn/itcast/cases/OptionDemo.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/cases/OptionDemo.scala	(date 1536380210716)
+++ src/cn/itcast/cases/OptionDemo.scala	(date 1536380210716)
@@ -0,0 +1,22 @@
+package cn.itcast.cases
+
+/**
+  * create by zyiming.
+  *
+  * 在Scala中Option类型用样例类来表示可能存在或者可能不存在的值(Option的子类有Some和None)。Some包装了某个值，None表示没有值
+  */
+object OptionDemo {
+  def main(args: Array[String]): Unit = {
+    val map = Map("a" ->  1,"b" -> 2)
+    val v = map.get("b") match {
+      case Some(i) => i
+      case None => 0
+    }
+
+    println(v)
+    //更好的方式
+    val v1 = map.getOrElse("c",0)
+    println(v1)
+  }
+
+}
Index: src/cn/itcast/cases/PartialFuncDemo.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/cases/PartialFuncDemo.scala	(date 1536390086247)
+++ src/cn/itcast/cases/PartialFuncDemo.scala	(date 1536390086247)
@@ -0,0 +1,37 @@
+package cn.itcast.cases
+
+/**
+  * create by zyiming.
+  */
+object PartialFuncDemo {
+  val func1: PartialFunction[String,Int] = {
+    case "one" => 1
+    case "two" => 2
+    case _ => -1
+  }
+
+//  isDefinedAt ： 这个函数的作用是判断传入的参数是否在这个偏函数处理的范围内
+  println(func1.isDefinedAt("one"))
+  println(func1.isDefinedAt(""))
+
+  // 用普通方法加上模式匹配也尅实现上述功能
+  def func2(num: String): Int = num match {
+    case "one" => 1
+    case "two" => 2
+    case  _ => -1
+  }
+
+  //TODO 偏应用函数 部分应用函数 当应用的参数有n个 但是调用的时候给予小于n个参数
+  //TODO 因为这时候函数并没有真正执行完 所以返回的结果还是一个函数
+  val f3 = (x:Int , y: Int) => x+y
+  println(f3(1,8))
+  val f: (Int) => Int = f3(1,_:Int)
+  println(f)
+  val r2: Int = f(4)
+  println(r2)
+
+  def main(args: Array[String]): Unit = {
+    println(func1("one"))
+    println(func2("one"))
+  }
+}
Index: src/cn/itcast/demo/ApplyDemo.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/demo/ApplyDemo.scala	(date 1536412198192)
+++ src/cn/itcast/demo/ApplyDemo.scala	(date 1536412198192)
@@ -0,0 +1,18 @@
+package cn.itcast.demo
+
+/**
+  * create by zyiming.
+  */
+
+
+
+object ApplyDemo {
+  def main(args: Array[String]): Unit = {
+    //
+    //
+    val arr1 = Array(5)
+    //
+    var arr2 = new Array(5)
+    println(arr1.toBuffer)
+  }
+}
\ No newline at end of file
Index: src/cn/itcast/demo/Foo.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/demo/Foo.scala	(date 1536413391828)
+++ src/cn/itcast/demo/Foo.scala	(date 1536413391828)
@@ -0,0 +1,25 @@
+package cn.itcast.demo
+
+/**
+  * create by zyiming.
+  */
+class Foo(foo: String) {
+}
+
+object Foo {
+  def apply(foo: String) : Foo = {
+    new Foo(foo)
+  }
+}
+
+//定义了以一个Foo类,并且在这个类中,有一个伴生对象Foo,里面定义了apply方法.有了这个apply方法以后,
+//我们调用这个Foo类的时候,用函数的方式来调用
+
+object Client {
+  def main(args: Array[String]): Unit = {
+    val foo = Foo("hello")
+  }
+}
+
+//我们调用Foo("hello")的方式,就得到一个Foo类型的对象,这一切就是apply方法的功劳
+//如果没有apply方法,我们将使用new关键字来得到Foo对象
\ No newline at end of file
Index: src/cn/itcast/demo/Money.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/demo/Money.scala	(date 1536414401876)
+++ src/cn/itcast/demo/Money.scala	(date 1536414401876)
@@ -0,0 +1,30 @@
+package cn.itcast.demo
+
+/**
+  * create by zyiming.
+  */
+class Money(val value: Double,val country: String) {}
+
+object Money {
+  def apply(value: Double, country: String) : Money = new Money(value,country)
+
+  def unapply(arg: Money): Option[(Double, String)] = {
+    if (arg == null) {
+      None
+    } else {
+      Some(arg.value, arg.country)
+    }
+  }
+
+
+}
+
+
+
+//def testUnapply() = {
+//  val money = Money(10.1,"RMB")
+//  money match {
+//  case money(num,"RMB") => println("RMB: "+num)
+//  case _ => println("Not RMB")
+//}
+//}
\ No newline at end of file
Index: src/cn/itcast/actor/Task.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/actor/Task.scala	(date 1536400809817)
+++ src/cn/itcast/actor/Task.scala	(date 1536400809817)
@@ -0,0 +1,71 @@
+package cn.itcast.actor
+
+
+//import scala.actors.Actor
+//import scala.collection.mutable
+//import scala.concurrent.Future
+//import scala.io.Source
+//import scala.reflect.io.File
+
+import java.io.File
+import scala.actors.{Actor, Future}
+import scala.collection.mutable
+import scala.io.Source
+
+/**
+  * create by zyiming.
+  */
+
+case class SubmitTask(fileName: String)
+case class ResultTask(result: Map[String,Int])
+class Task extends Actor{
+  override def act(): Unit = {
+    loop {
+      react {
+        case SubmitTask(fileName) => {
+          val contents = Source.fromFile(new File(fileName)).mkString
+          var arr = contents.split("\r\n")
+          val result = arr.flatMap(_.split(" ")).map((_, 1)).groupBy(_._1).mapValues(_.length)
+
+          // 把本次task的结果返回给发送消息的地方
+          sender ! ResultTask(result)
+        }
+      }
+    }
+  }
+}
+
+
+object WordCount {
+  def main(args: Array[String]): Unit = {
+    // 创建待处理文件数组
+    val files = Array("C:\\Users\\64955\\Desktop\\aaa.txt","C:\\Users\\64955\\Desktop\\bbb.txt")
+
+    val replaySet = new mutable.HashSet[Future[Any]]
+    //
+    val resultList = new mutable.ListBuffer[ResultTask]
+    // 遍历待处理文件 分别启动task处理
+    for (f <- files) {
+      val t = new Task
+      // 启动actor 并发送待处理文件名称 异步有返回值的
+      val replay = t.start() !! SubmitTask(f)
+      // 把返回结果添加到replaySet中
+      replaySet += replay
+    }
+
+    // 遍历replaySet 找出真正有返回结果的Future
+    while (replaySet.size > 0) {
+      // 通过isSet方法过滤出Future真正有结果的
+      val toCumpute = replaySet.filter(_.isSet)
+      // 遍历已经完成的toCumpute 提取数据 保存到resultList
+      for (r <- toCumpute) {
+        val result = r.apply()
+        resultList += result.asInstanceOf[ResultTask]
+        replaySet.remove(r)
+      }
+    }
+
+    val finalResult = resultList.map(_.result).flatten.groupBy(_._1).mapValues(x => x.foldLeft(0)(_ + _._2))
+    println(finalResult)
+  }
+}
\ No newline at end of file
Index: src/cn/itcast/demo/Student.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/demo/Student.scala	(date 1536409748528)
+++ src/cn/itcast/demo/Student.scala	(date 1536409748528)
@@ -0,0 +1,27 @@
+package cn.itcast.demo
+
+/**
+  * create by zyiming.
+  * 每个类都有主构造器,主构造器的参数直接放置类名后面,与类交织在一起
+  */
+class Student(val name: String, var age: Int) {
+  //主构造器会执行类定义的所有语句
+  println("执行主构造器")
+  private var gender = "male"
+
+  def this(name: String,age: Int,gender: String) {
+    //每个辅助构造器执行必须以主构造器或者其他辅助构造器的调用开始
+    this(name,age)
+    println("执行辅助构造器")
+    this.gender=gender
+  }
+}
+
+object Student {
+  def main(args: Array[String]): Unit = {
+    val s1 = new Student("zhangsan",20)
+    println(s1.gender)
+    val s2 = new Student("zhangsan",20,"female")
+    println(s2.gender)
+  }
+}
\ No newline at end of file
Index: src/cn/itcast/demo/Session.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/demo/Session.scala	(date 1536410571308)
+++ src/cn/itcast/demo/Session.scala	(date 1536410571308)
@@ -0,0 +1,37 @@
+package cn.itcast.demo
+
+/**
+  * create by zyiming.
+  *
+  * scala 提供了object，相当于 class 的单个实例。
+  * 可以直接访问，不需要实例化该类的对象。
+  * 因此main方法可以写在object中，作为程序启动的入口。
+  *
+  * 在object中，属性、方法相当于都是静态的。
+  *
+  * object作用：存放工具方法和常量、高效共享单个不可变的实例、单例模式等。
+  */
+
+
+class Session {}
+
+
+object SessionFactory {
+  // 该部分相当于Java中的静态块
+  val session = new Session
+  // 在object中的方法相当于Java中的静态方法
+  def getsession(): Session = {
+    session
+  }
+}
+
+object SingletonDemo {
+  def main(args: Array[String]): Unit = {
+    // 单例对象,不需要new,用[单例对象名称.方法]调用对象中的方法
+    val session1 = SessionFactory.getsession()
+    println(session1)
+    // 单例对象,不需要new,用[单例对象名称.变量]调用对象中成员变量
+    val session2=SessionFactory.session
+    println(session2)
+  }
+}
Index: src/cn/itcast/demo/Dog.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/cn/itcast/demo/Dog.scala	(date 1536411165248)
+++ src/cn/itcast/demo/Dog.scala	(date 1536411165248)
@@ -0,0 +1,27 @@
+package cn.itcast.demo
+
+/**
+  * create by zyiming.
+  */
+//伴生类
+class Dog {
+  val id = 1
+  private var name = "itcast"
+  def printName(): Unit = {
+    // 在Dog类中可以访问伴生对象Dog的私有属性
+    println(Dog.CONSTANT+name)
+  }
+}
+
+//伴生对象
+object Dog {
+  //伴生对象的私有属性
+  private val CONSTANT = "汪汪汪 : "
+
+  def main(args: Array[String]): Unit = {
+    val d = new Dog
+    //访问私有的字段name
+    d.name="123"
+    d.printName()
+  }
+}
\ No newline at end of file
